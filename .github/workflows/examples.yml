# CI output from these examples are available here:
# https://github.com/gaggle/elixir_script/actions/workflows/examples.yml?query=branch%3Amain
#
# ℹ️ This file is automatically generated via `mix e2e.update_examples_workflow`

name: Examples

on:
  push:
    branches: [ 'main' ]
    paths:
      - .github/workflows/examples.yml
  release:
    types:
      - "created"
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.PAT }}

jobs:
  scripts-are-run-and-what-it-returns-is-available-via-outputs:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            defmodule Foo do
              def bar, do: "bar"
            end
            Foo.bar()

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  io-is-visible-in-logs:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            IO.puts("Hello world")

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  event-context-is-available:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            IO.inspect(context)
            Map.keys(context) |> Enum.sort

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  the-entire-context-can-be-inspected:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            IO.inspect(context, pretty: true, limit: :infinity, printable_limit: :infinity)

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  multiline-scripts-are-possible:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            IO.puts("Hello world")
            "result"

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  oh-hi-mark-greeter:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            defmodule Greeter do
              def greet(name), do: "Oh hi #{name}!"
            end
            Greeter.greet("Mark")

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  can-use-the-github-api-via-tentacat:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            {200, user, _} = Tentacat.Users.find(client, "gaggle")
            get_in(user, ["login"])

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  can-grab-information-via-the-github-api:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            {200, stargazers, _} = Tentacat.Users.Starring.stargazers(client, "gaggle", "elixir_script")
            IO.inspect(Enum.map_join(stargazers, ", ", & &1["login"]), label: "Stargazers")

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

  can-interact-with-repositories-via-github-api:
    runs-on: ubuntu-latest
    steps:
      - uses: gaggle/elixir_script@v0
        id: script
        with:
          script: |
            {204, _, _} = Tentacat.Users.Starring.star(client, "gaggle", "elixir_script")
            :ok

      - name: Get result
        run: echo "${{steps.script.outputs.result}}"

name: CI/CD

on:
  push:
    branches: [ '**' ] # this triggers only on branch commits, which prevents triggering off of tag-only commits
    paths-ignore:
      - .github/workflows/examples.yml
      - .github/workflows/move-tags.yml
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.parse.outputs.semver }}
      releasable: ${{ steps.parse.outputs.releasable }}
      tag-exists: ${{ steps.parse.outputs.tag-exists }}
    steps:
      - uses: actions/checkout@v3
      - uses: pkgxdev/dev@v0
      - name: Parse version
        id: parse
        uses: ./.github/actions/version
        with:
          semver: ${{ env.VERSION }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pkgxdev/dev@v0
      - run: mix deps.get
      - run: mix test

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pkgxdev/dev@v0
      - run: mix deps.get
      - run: mix e2e.update_examples_workflow --check

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build-tar-image
        with:
          build-file: .github/Dockerfile
          build-context: .

  vulnerability-scanner:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/load-tar-image
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: '1'
          format: 'sarif'
          ignore-unfixed: true
          image-ref: ${{ env.IMAGE_NAME }}
          output: 'trivy-results.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          vuln-type: library
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  e2e-tests-discovery:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: pkgxdev/dev@v0
      - run: mix deps.get
      - id: set-matrix
        name: Discover E2E tests
        run: mix e2e.set_github_matrix matrix

  e2e-tests:
    needs: [ build, e2e-tests-discovery ]
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.e2e-tests-discovery.outputs.matrix)}}
    runs-on: ubuntu-latest
    name: "e2e tests (${{ matrix.name }})"
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/load-tar-image
      - uses: ./.github/actions/run-e2e
        with:
          image-name: ${{ env.IMAGE_NAME }}
          script: ${{ matrix.script }}
          expected: ${{ matrix.expected }}

  push:
    needs: [ version, test, audit, build, e2e-tests, vulnerability-scanner ]
    runs-on: ubuntu-latest
    name: ${{ needs.version.outputs.releasable == 'true' && 'push' || 'push (dry-run)' }}
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: ./.github/actions/load-tar-image
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - uses: ./.github/actions/push-tar-image
        with:
          source-image: ${{ env.IMAGE_NAME }}
          semver: ${{ needs.version.outputs.semver }}
          exists: ${{ needs.version.outputs.tag-exists }}
          push: ${{ needs.version.outputs.releasable }}

  release:
    needs: [ version, push ]
    if: needs.version.outputs.releasable == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          tag_name: v${{ needs.version.outputs.semver }}
          token: ${{ secrets.PAT }} # using our own PAT so other workflows run
